---
description: AI 工具獨立域名實施計畫。當需要規劃、執行或回顧 aitools.leopilot.com 新域名設置進度時應調用此規則。本規則為此次域名分離的唯一真實來源，涵蓋從應用程式調整、Nginx 配置到 SEO 優化的完整行動方案，旨在實現零停機的域名分離部署。
globs:
alwaysApply: false
---

# 🎯 專案代號：AI 工具域名分離計畫

## 1. 專案背景與需求分析

### 1.1 業務需求

主管要求建立新域名 `aitools.leopilot.com`，專門服務 AI 工具相關頁面：

- 將 `corpinsight.leopilot.com/aitool/*` 的所有路由遷移到新域名
- 實現 URL 結構簡化：
  - `corpinsight.leopilot.com/aitool/search` → `aitools.leopilot.com/search`
  - `corpinsight.leopilot.com/aitool/detail/*` → `aitools.leopilot.com/detail/*`
- 舊路徑將不再可用，自動跳轉到新域名

### 1.2 現況分析

**系統架構**：

- 主專案運行於 Docker 容器（port 3000）
- Nginx 作為反向代理
- Legacy 專案運行於 PM2
- 單一程式碼庫包含所有功能模組

**AI 工具頁面結構**：

```
/aitool/
├── search      # 搜尋頁面（支援 ?q= 和 ?tag= 參數）
├── detail/
│   └── [toolId]  # 工具詳情頁面
└── (自動重定向到 /search)
```

### 1.3 技術評估結論

- ✅ **可透過 Nginx + 應用層調整實現**，無需拆分專案
- ✅ **保持單一程式碼庫**，便於維護和功能整合
- ✅ **使用 aitools 而非 aitool**（複數形式更符合 SEO 和使用習慣）

## 2. 實施方案架構

```mermaid
graph TD
    subgraph "使用者請求"
        A[aitools.leopilot.com/search]
        B[corpinsight.leopilot.com/aitool/search]
    end

    subgraph "Nginx 層"
        C[aitools 服務塊<br/>反向代理並改寫路徑]
        D[corpinsight 服務塊<br/>301 重定向]
    end

    subgraph "應用層"
        E[Next.js App<br/>檢測來源域名]
        F[動態生成正確的內部連結]
    end

    A --> C
    B --> D
    D --> A
    C --> E
    E --> F
```

## 3. 開發任務清單

### Phase 1: 準備工作 ⏱️ 預計 2 小時

- [ ] **1.1 建立測試分支**

  ```bash
  git checkout -b feature/aitools-domain-separation
  ```

- [ ] **1.2 備份現有配置**

  ```bash
  # 備份 Nginx 配置
  sudo cp /etc/nginx/conf.d/_leopilot_master.conf /etc/nginx/conf.d/_leopilot_master.conf.backup

  # 備份應用程式配置
  cp next/src/config/site.ts next/src/config/site.ts.backup
  ```

- [ ] **1.3 準備回滾腳本**
  ```bash
  # 創建 scripts/rollback-aitools.sh
  ```

### Phase 2: 應用層調整 ⏱️ 預計 4 小時

- [ ] **2.1 擴展域名配置系統**

  - 修改 `next/src/config/site.ts` 支援多域名模式
  - 新增域名檢測邏輯

- [ ] **2.2 建立域名感知中間件**

  - 在 `next/src/middleware.ts` 新增域名檢測
  - 根據 `X-Original-Host` header 判斷請求來源

- [ ] **2.3 調整連結生成邏輯**

  - 創建 `useAiToolsUrl` hook
  - 更新所有 AI 工具相關的內部連結

- [ ] **2.4 更新 SEO 相關組件**
  - 調整 canonical URLs
  - 更新 sitemap 生成邏輯
  - 修改 robots.txt

### Phase 3: Nginx 配置 ⏱️ 預計 2 小時

- [ ] **3.1 申請 SSL 證書**

  ```bash
  # 使用 Let's Encrypt 為 aitools.leopilot.com 申請證書
  sudo certbot certonly --nginx -d aitools.leopilot.com
  ```

- [ ] **3.2 創建測試配置**

  - 建立 `/etc/nginx/conf.d/aitools_test.conf`
  - 配置反向代理規則

- [ ] **3.3 測試配置語法**
  ```bash
  sudo nginx -t
  ```

### Phase 4: 部署與測試 ⏱️ 預計 3 小時

- [ ] **4.1 部署應用程式更新**

  ```bash
  cd /home/ec2-user/Corp-Insight/next
  npm run build:prod
  npm run start:prod
  ```

- [ ] **4.2 啟用 Nginx 新配置**

  ```bash
  # 移除測試後綴，正式啟用
  sudo mv /etc/nginx/conf.d/aitools_test.conf /etc/nginx/conf.d/aitools.conf
  sudo nginx -s reload
  ```

- [ ] **4.3 功能測試清單**
  - [ ] 訪問 `aitools.leopilot.com/search` 正常顯示
  - [ ] 搜尋功能正常（包含參數）
  - [ ] 詳情頁面正常載入
  - [ ] 舊域名自動跳轉
  - [ ] 其他頁面不受影響

### Phase 5: SEO 與監控 ⏱️ 預計 2 小時

- [ ] **5.1 提交新域名到 Google Search Console**
- [ ] **5.2 更新 sitemap 並提交**
- [ ] **5.3 設置監控告警**
- [ ] **5.4 更新 Google Analytics**

## 4. 具體實施細節

### 4.1 應用層程式碼調整

**site.ts 配置擴展**：

```typescript
// next/src/config/site.ts
export const SITE_CONFIG = {
  main: {
    domain:
      process.env.NEXT_PUBLIC_SITE_URL || "https://corpinsight.leopilot.com",
    name: "CorpInsight",
  },
  aitools: {
    domain:
      process.env.NEXT_PUBLIC_AITOOLS_URL || "https://aitools.leopilot.com",
    name: "AI Tools",
  },
};

export function getAiToolsUrl(path: string, originalHost?: string) {
  const isAiToolsDomain = originalHost?.includes("aitools");
  if (isAiToolsDomain) {
    return path; // 已在 aitools 域名下，返回相對路徑
  }
  return `${SITE_CONFIG.aitools.domain}${path}`;
}
```

### 4.2 Nginx 配置範例

```nginx
# /etc/nginx/conf.d/aitools.conf
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name aitools.leopilot.com;

    ssl_certificate /etc/letsencrypt/live/aitools.leopilot.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aitools.leopilot.com/privkey.pem;

    # 安全標頭
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000" always;

    location / {
        # 重寫路徑，加上 /aitool 前綴
        rewrite ^(.*)$ /aitool$1 break;

        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host corpinsight.leopilot.com;
        proxy_set_header X-Original-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# 在主域名配置中加入重定向
# 修改 /etc/nginx/conf.d/_leopilot_master.conf
location /aitool {
    return 301 https://aitools.leopilot.com$request_uri;
}
```

## 5. 測試計畫

### 5.1 功能測試腳本

```bash
#!/bin/bash
# test-aitools-domain.sh

echo "=== AI Tools 域名測試 ==="

# 測試新域名訪問
echo "1. 測試新域名首頁"
curl -I https://aitools.leopilot.com/search

# 測試參數傳遞
echo "2. 測試搜尋參數"
curl -I "https://aitools.leopilot.com/search?q=chatgpt&tag=writing"

# 測試舊域名重定向
echo "3. 測試舊域名重定向"
curl -I https://corpinsight.leopilot.com/aitool/search

# 測試詳情頁
echo "4. 測試詳情頁面"
curl -I https://aitools.leopilot.com/detail/test-tool-id
```

### 5.2 監控檢查項目

- Nginx error.log 無異常
- Docker 容器運行正常
- 網站回應時間正常
- SSL 證書有效

## 6. 回滾方案

如果出現問題，執行以下步驟：

```bash
#!/bin/bash
# rollback-aitools.sh

echo "開始回滾 AI Tools 域名設置..."

# 1. 恢復 Nginx 配置
sudo cp /etc/nginx/conf.d/_leopilot_master.conf.backup /etc/nginx/conf.d/_leopilot_master.conf
sudo rm -f /etc/nginx/conf.d/aitools.conf
sudo nginx -s reload

# 2. 恢復應用程式碼
cd /home/ec2-user/Corp-Insight
git checkout main
git branch -D feature/aitools-domain-separation

# 3. 重啟應用
cd next
npm run start:prod

echo "回滾完成！"
```

## 7. 風險管理

### 7.1 已識別風險

1. **Nginx 配置錯誤**：可能導致網站無法訪問

   - 緩解措施：先用測試配置，確認無誤後再啟用

2. **應用程式錯誤**：可能影響功能正常運作

   - 緩解措施：完整測試後再部署，準備回滾腳本

3. **SEO 影響**：域名變更可能影響搜尋排名
   - 緩解措施：正確設置 301 重定向和 canonical URLs

### 7.2 建議執行時間

- 選擇**週末凌晨**或**流量最低時段**執行
- 預留至少 4 小時的維護窗口
- 安排人員監控和應急處理

## 8. 專案追蹤

### 開發日誌

- `2025-08-05`: `AI/Claude` - 完成需求分析和技術方案設計
- `YYYY-MM-DD`: `[執行人]` - `[工作描述]`

### 關鍵決策記錄

1. **使用 aitools 而非 aitool**：基於 SEO 和使用習慣考量
2. **不拆分專案**：保持程式碼統一管理，降低維護成本
3. **採用 Nginx 反向代理方案**：最小化程式碼改動

---

_本文檔為 AI Tools 域名分離專案的權威指南，所有相關開發工作應參照此文檔執行。_
