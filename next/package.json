{
  "name": "corp-insight",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "// 🚀 QUICK START (常用指令)": "",
    "// 啟動開發環境 (Docker): 日常開發建議使用此指令": "",
    "start:dev": "docker compose --profile dev --profile tools up -d",
    "// 啟動生產環境 (Docker): 模擬生產環境時使用": "",
    "start:prod": "docker compose --profile prod --profile tools up -d",
    "// 重啟開發環境應用程式": "",
    "restart:dev": "npm run docker:dev:restart",
    "// 重啟生產環境應用程式": "",
    "restart:prod": "npm run docker:prod:restart",
    "// 重建開發環境映像檔": "",
    "rebuild:dev": "npm run docker:dev:rebuild",
    "// 重建生產環境映像檔": "",
    "rebuild:prod": "npm run docker:prod:rebuild",
    "// 關閉所有 Docker 容器: 一鍵停止所有執行中的服務": "",
    "stop": "npm run docker:force-stop && npm run docker:clean",
    "// 💻 LOCAL DEVELOPMENT (本地開發)": "",
    "// 啟動 Next.js 開發伺服器 (不使用 Docker)": "",
    "dev": "next dev",
    "// 建置生產版本的應用程式": "",
    "build": "next build",
    "// 啟動生產版本的伺服器": "",
    "start": "next start",
    "// 執行 ESLint 檢查程式碼風格": "",
    "lint": "next lint",
    "// 自動格式化所有程式碼 (Prettier)": "",
    "format": "prettier --write .",
    "// 檢查程式碼是否已格式化": "",
    "format:check": "prettier --check .",
    "// 自動修正 ESLint 與 Prettier 的問題": "",
    "format:fix": "prettier --write . && eslint --fix .",
    "// 🔑 API KEY MANAGEMENT": "",
    "// 驗證 Gemini API 金鑰是否有效": "",
    "// npm run validate:gemini -- --key=YOUR_GEMINI_API_KEY": "",
    "validate:gemini": "node scripts/validate-gemini-api-key.mjs",
    "// 測試 Gemini API 金鑰池的兩種核心策略 (Failover & Round-Robin)": "",
    "// 測試 Failover 策略請執行 `npm run test:gemini`": "",
    "// 測試 Round-Robin 策略請執行 `npm run test:gemini -- --strategy=round-robin`": "",
    "test:gemini": "ts-node -r tsconfig-paths/register --project scripts/tsconfig.json scripts/test-gemini-key-strategies.ts",
    "// 測試 Round-Robin 策略的節點排除與恢復": "",
    "test:ejection": "node scripts/test-round-robin-ejection.js",
    "// 🐳 DOCKER ENVIRONMENT (容器環境管理)": "",
    "// --- 啟動單一環境或服務 ---": "",
    "// 僅啟動開發環境應用程式 (需手動啟動工具)": "",
    "docker:dev": "docker compose --profile dev up -d",
    "// 僅啟動生產環境應用程式 (需手動啟動工具)": "",
    "docker:prod": "docker compose --profile prod up -d",
    "// 僅啟動 MongoDB 服務": "",
    "docker:mongo": "docker compose up mongodb -d",
    "// 僅啟動工具類服務 (如 Mongo Express)": "",
    "docker:tools": "docker compose --profile tools up -d",
    "// --- 建置與重建 (Build & Rebuild) ---": "",
    "// 【開發】強制重新建置映像檔 (無快取)": "",
    "docker:dev:build": "docker compose --profile dev --profile tools build --no-cache",
    "// 【開發】完整重建並啟動 (Down > Build > Up)": "",
    "docker:dev:rebuild": "npm run docker:dev:down && npm run docker:dev:build && npm run docker:dev && npm run docker:tools",
    "// 【生產】強制重新建置映像檔 (無快取)": "",
    "docker:prod:build": "docker compose --profile prod --profile tools build --no-cache",
    "// 【生產】完整重建並啟動 (Down > Build > Up)": "",
    "docker:prod:rebuild": "npm run docker:prod:down && npm run docker:prod:build && npm run docker:prod && npm run docker:tools",
    "// --- 狀態與監控 ---": "",
    "// 查看所有容器的日誌": "",
    "docker:logs": "docker compose logs -f",
    "// 查看開發應用程式的日誌": "",
    "docker:dev:logs": "docker compose logs -f app-dev",
    "// 查看生產應用程式的日誌": "",
    "docker:prod:logs": "docker compose logs -f app-prod",
    "// 查看所有容器的狀態": "",
    "docker:ps": "docker compose ps",
    "// 進入開發容器的 shell 環境": "",
    "docker:dev:shell": "docker exec -it app-dev sh",
    "// 手動執行 Docker 啟動腳本 (主要用於測試)": "",
    "docker:entrypoint": "bash scripts/entrypoint.sh",
    "// --- 服務重啟 ---": "",
    "// 快速重啟開發環境並清除快取 (僅重啟 app-dev)": "",
    "reload:dev": "docker compose stop app-dev && rm -rf .next && docker compose up -d app-dev",
    "// 快速重啟正式環境並清除快取 (僅重啟 app-prod)": "",
    "reload:prod": "docker compose stop app-prod && rm -rf .next && docker compose up -d app-prod",
    "// 重啟所有服務": "",
    "docker:restart": "docker compose restart",
    "// 重啟開發應用程式": "",
    "docker:dev:restart": "docker compose --profile dev --profile tools down && docker compose --profile dev --profile tools up -d",
    "// 重啟生產應用程式": "",
    "docker:prod:restart": "docker compose --profile prod --profile tools down && docker compose --profile prod --profile tools up -d",
    "// 重啟 MongoDB": "",
    "docker:mongo:restart": "docker compose restart mongodb",
    "// 重啟 Mongo Express": "",
    "docker:mongo-express:restart": "docker compose restart mongo-express",
    "// --- 清理與關閉 ---": "",
    "// 關閉所有 Docker 服務": "",
    "docker:down": "docker compose down --remove-orphans",
    "// 關閉 Docker 服務並移除資料卷 (用於資料庫重置)": "",
    "docker:down:volumes": "docker compose down -v --remove-orphans",
    "// 關閉開發環境服務": "",
    "docker:dev:down": "docker compose --profile dev --profile tools down",
    "// 關閉生產環境服務": "",
    "docker:prod:down": "docker compose --profile prod --profile tools down",
    "// 強制停止所有相關容器 (包含孤立者)": "",
    "docker:force-stop": "docker compose down --remove-orphans && docker stop app-dev app-prod mongo mongo-express 2>/dev/null || echo \"Containers stopped\"",
    "// 清理無用的容器和網路": "",
    "docker:clean": "docker container prune -f && docker network prune -f",
    "// 終極清理: 移除所有容器、網路、資料卷和映像檔 (慎用！)": "",
    "docker:purge": "docker compose down -v --remove-orphans && docker system prune -a --volumes -f && npm cache clean --force",
    "// 🗃️ DATABASE (資料庫管理)": "",
    "// --- 初始化與設定 ---": "",
    "// 初始化資料庫 collections (需 DB 運行中)": "",
    "db:init": "node scripts/init-mongodb-collections.js",
    "// 一鍵設定資料庫 (啟動 MongoDB + 初始化)": "",
    "db:setup": "npm run docker:mongo && npm run db:init",
    "// --- 連線測試 ---": "",
    "// 測試 Docker 容器內到資料庫的連線": "",
    "db:connect": "node scripts/db-connect.js",
    "// --- 備份與還原 ---": "",
    "// 備份所有資料 (核心 + 快取)": "",
    "db:backup": "node scripts/db-backup.js --scope=all",
    "// 僅備份核心資料": "",
    "db:backup:core": "node scripts/db-backup.js --scope=core",
    "// 從最新備份檔還原資料": "",
    "db:restore": "node scripts/db-restore.js",
    "// 重置 API 金鑰狀態": "",
    "db:reset-keys": "ts-node -r tsconfig-paths/register --project scripts/tsconfig.json scripts/cron-reset-api-key-stats.ts",
    "//【推薦】一鍵還原資料並重建索引": "",
    "db:full-restore": "npm run db:restore && npm run db:init",
    "// 列出所有 Collections": "",
    "db:list": "node scripts/db-list-collections.js",
    "// 分析並列出所有備份檔案": "",
    "db:analyze-backups": "node scripts/db-analyze-backups.js",
    "// --- 維護 ---": "",
    "// 清理快取資料": "",
    "db:clean": "node scripts/db-maintenance.js --scope=cache",
    "// --- 建立 AI 工具 ---": "",
    "// 匯入所有批次資料": "",
    "db:ai:import": "node prompts/scripts/import-ai-tools.js --dir=prompts/batches",
    "// 匯入單一批次檔案": "",
    "db:ai:import:batch": "node prompts/scripts/import-ai-tools.js --batch=1",
    "// 列出所有 AI 工具標籤": "",
    "db:ai:tags": "node prompts/scripts/list-ai-tags.js --active=true --limit=200",
    "// 拆分所有批次資料": "",
    "ai:batches": "node prompts/scripts/split-into-batches.js",
    "// 合併單一批次資料": "",
    "// 用法：npm run ai:combine -- 0001": "",
    "ai:combine": "python3 prompts/scripts/combine_batch.py",
    "// 合併所有批次資料": "",
    "ai:combine:all": "python3 prompts/scripts/combine_batch.py all",
    "// 🗺️ SITEMAP (網站地圖管理)": "",
    "// 在開發模式下測試 Sitemap 產生與快取": "",
    "sitemap:test": "node scripts/sitemap-monitor.js test",
    "// 啟動 Sitemap 監控器 (背景執行)": "",
    "sitemap:monitor": "node scripts/sitemap-monitor.js monitor",
    "// 停止 Sitemap 監控器": "",
    "sitemap:stop": "node scripts/sitemap-monitor.js stop",
    "// 檢查 Sitemap 監控器狀態": "",
    "sitemap:status": "node scripts/sitemap-monitor.js status",
    "// 清除 Sitemap 的 Redis 快取": "",
    "sitemap:clear": "node scripts/sitemap-monitor.js clear-cache",
    "// 📈 GIT STATUS (Git 狀態查詢)": "",
    "// 檢查當前的 Git 狀態 (status, branch, log)": "",
    "git:check": "bash ./scripts/git-check.sh",
    "// 📦 GIT SUBMODULES (Git Submodule 管理)": "",
    "// 新增 submodule (需提供 repo_url 和 project_name)": "",
    "// npm run submodule:add -- https://github.com/user/repo.git my-repo": "",
    "submodule:add": "bash ./scripts/submodule-add.sh",
    "// 移除 submodule (需提供 project_name)": "",
    "// npm run submodule:remove -- my-repo": "",
    "submodule:remove": "bash ./scripts/submodule-remove.sh",
    "// 初始化所有 submodules (初次 clone 專案後執行)": "",
    "submodule:init": "git submodule update --init --recursive",
    "// 更新所有 submodules 到最新的遠端 commit": "",
    "submodule:update": "git submodule update --remote --merge",
    "// 同步 .gitmodules 的 URL 設定到 .git/config": "",
    "submodule:sync": "git submodule sync --recursive",
    "// 檢查所有 submodules 的狀態": "",
    "submodule:status": "git submodule status",
    "// 🛠️ MAINTENANCE & DEPLOYMENT (維護與部署)": "",
    "// --- 完整環境重置 (大掃除) ---": "",
    "// 重置開發環境 (清理 Docker + 重啟 + 還原資料)": "",
    "reset:dev": "npm run stop && npm run docker:purge && npm run start:dev && npm run db:full-restore",
    "// 重置生產環境 (清理 Docker + 重啟 + 還原資料)": "",
    "reset:prod": "npm run stop && npm run docker:purge && npm run start:prod && npm run db:full-restore",
    "// --- 故障排除 ---": "",
    "// 重設 Docker 環境 (強制停止 > 系統清理 > 重建開發映像檔)": "",
    "fix:docker": "npm run stop && docker system prune -f && npm run docker:dev:build",
    "// 重設專案依賴 (刪除 node_modules, package-lock.json 後重裝)": "",
    "fix:deps": "rm -rf node_modules package-lock.json && npm install",
    "// --- 健康檢查與部署 ---": "",
    "// 執行應用程式健康檢查": "",
    "health:check": "node scripts/healthcheck.js",
    "// 部署到生產環境": "",
    "deploy:prod": "bash scripts/deploy-prod.sh",
    "// 🔒 SECURE REMOTE ACCESS (安全遠端存取)": "",
    "// 連線到 EC2 並直接進入專案目錄": "",
    "ssh:prod": "bash scripts/connect-ec2-project.sh",
    "// 連線到 EC2 的 ssm-user (不自動切換目錄)": "",
    "ssh": "bash scripts/connect-ec2.sh",
    "// 啟動到 Mongo Express 的安全通道": "",
    "db:ui": "bash scripts/forward-db-port.sh",
    "// 🌐 NGINX SERVER (Nginx 伺服器管理)": "",
    "// 測試 Nginx 設定檔語法是否正確": "",
    "nginx:test": "sudo nginx -t",
    "// 優雅地重載 Nginx 設定 (不中斷服務)": "",
    "nginx:reload": "sudo systemctl reload nginx",
    "// 強制重啟 Nginx 服務": "",
    "nginx:restart": "sudo systemctl restart nginx",
    "// 🌍 AI TOOLS DOMAIN (AI 工具域名管理)": "",
    "// 測試 aitools.leopilot.com 域名功能是否正常": "",
    "// 包含重定向、API 路由、通用頁面等完整功能測試": "",
    "test:aitools": "bash ./scripts/test-aitools-domain.sh",
    "// 回滾 AI 工具域名設置到分離前的狀態": "",
    "// ⚠️ 警告：此操作將移除 aitools 域名的所有設定": "",
    "rollback:aitools": "bash ./scripts/rollback-aitools.sh",
    "// 列出 pm2 的程式列表": "",
    "pm2:list": "node scripts/format-pm2-list.js",
    "// 🗂️ CODEBASE TOOLS（程式碼整理工具）": "",
    "flatten": "node scripts/bmad-flatten.js"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@react-google-maps/api": "^2.20.6",
    "ansi-to-html": "^0.7.2",
    "chart.js": "^4.4.8",
    "chartjs-adapter-date-fns": "^3.0.0",
    "cheerio": "^1.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.24",
    "date-fns": "^4.1.0",
    "dotenv": "^16.5.0",
    "framer-motion": "^11.18.2",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.479.0",
    "mongoose": "^8.0.3",
    "mongodb": "^6.9.0",
    "next": "^14.1.0",
    "nodemailer": "^7.0.3",
    "opencc-js": "^1.0.5",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.3.8",
    "react-markdown": "^10.1.0",
    "react-schemaorg": "^2.0.0",
    "react-textarea-autosize": "^8.5.9",
    "remark-gfm": "^4.0.1",
    "tailwind-merge": "^3.3.1",
    "tar": "^7.4.3",
    "web-vitals": "^5.0.2"
  },
  "devDependencies": {
    "@netlify/plugin-nextjs": "^4.41.3",
    "@tailwindcss/typography": "^0.5.16",
    "@types/estree": "^1.0.8",
    "@types/google.maps": "^3.58.1",
    "@types/hast": "^3.0.4",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/mdast": "^4.0.4",
    "@types/node": "^20.17.24",
    "@types/nodemailer": "^6.4.17",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.7",
    "@types/unist": "^3.0.3",
    "autoprefixer": "^10.4.17",
    "eslint": "^8.56.0",
    "eslint-config-next": "^14.1.0",
    "eslint-config-prettier": "^9.1.0",
    "postcss": "^8.4.35",
    "prettier": "^3.2.5",
    "prettier-plugin-tailwindcss": "^0.5.11",
    "tailwindcss": "^3.4.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.2"
  }
}
